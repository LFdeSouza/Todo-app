(()=>{"use strict";class e{constructor(e){this.id=Math.random().toString(),this.name=e,this.tasks=[]}}class t{constructor(e,t,s){this.taskName=e,this.id=Math.random().toString(),this.description=t,this.dueDate=s,this.completed=!1}}class s{static savedProjects=JSON.parse(localStorage.getItem("projectList"))||[];static updateStorage(){localStorage.setItem("projectList",JSON.stringify(this.savedProjects))}static addProject(t){const s=new e(t);this.savedProjects.push(s),this.updateStorage()}static saveSelectedProject(e){this.savedProjects.forEach((t=>{t.id===e&&localStorage.setItem("selectedProject",JSON.stringify(t))}))}static getSelectedProjectId(){const e=JSON.parse(localStorage.getItem("selectedProject"))||null;if(e)return e.id}static getSelectedProjectName(){const e=JSON.parse(localStorage.getItem("selectedProject"))||null;if(e)return e.name}static getSelectedProjectIndex(){if(null===(JSON.parse(localStorage.getItem("selectedProject"))||null))return null;return this.savedProjects.findIndex((e=>e.id===this.getSelectedProjectId()))}static removeProject(){const e=this.getSelectedProjectIndex();this.savedProjects.splice(e,1),this.updateStorage(),localStorage.setItem("selectedProject",JSON.stringify(null))}static addTask(e,s,c){const a=new t(e,s,c),d=this.getSelectedProjectIndex();null===d?alert("Please select a Project"):(this.savedProjects[d].tasks.push(a),this.updateStorage())}static getTasks(){const e=this.getSelectedProjectIndex();return null===e?[]:this.savedProjects[e].tasks||[]}static markCompletedTask(e){const t=this.getSelectedProjectIndex();this.savedProjects[t].tasks.find((t=>t.id===e.id)).completed=e.checked,this.updateStorage()}static updateDueDate(e){const t=this.getSelectedProjectIndex();this.savedProjects[t].tasks.find((t=>t.id===e.id)).dueDate=e.value,this.updateStorage()}static deleteTask(e){const t=this.getSelectedProjectIndex(),c=this.savedProjects[t].tasks.findIndex((t=>t.id===e.id));s.savedProjects[t].tasks.splice(c,1),this.updateStorage()}}const c=document.querySelector(".time");function a(){let e=new Date,t=e.getHours(),s=e.getMinutes(),o=e.getSeconds();c.innerHTML=`${t}<span>:</span>${d(s)}<span>:</span>${d(o)}`,setTimeout(a,1e3)}function d(e){return parseInt(e)<10?"0"+e:e}document.querySelector(".add-project"),window.addEventListener("load",(e=>{a(),l(),y()}));const o=document.querySelector("#project-form");let r=document.querySelector(".new-project-field");const n=document.querySelector(".project-list");function l(){n.innerHTML="",s.savedProjects.forEach((e=>{const t=document.createElement("li");t.textContent=`${e.name}`,t.dataset.id=e.id,t.dataset.id===s.getSelectedProjectId()&&t.classList.add("active-project"),n.appendChild(t)}))}o.addEventListener("submit",(e=>{e.preventDefault();const t=r.value;""!==t&&null!==t&&(s.addProject(t),l(),r.value=null)})),n.addEventListener("click",(e=>{s.saveSelectedProject(e.target.dataset.id),l(),y()}));const i=document.querySelector(".tasks-title h3"),u=document.querySelector(".delete-project"),S=document.querySelector(".tasks-list"),m=document.querySelector("#task-template"),p=document.querySelector(".open-modal"),g=document.querySelector(".modal"),j=document.querySelector(".modal-form"),h=document.querySelector(".btn-modal-cancel"),k=document.querySelector(".add-task-field"),v=document.querySelector(".add-task-description"),P=document.querySelector("#task-due-date");function y(){s.getSelectedProjectName(),S.innerHTML="",function(){const e=s.getSelectedProjectName();i.textContent=e}(),s.getTasks().forEach((e=>{const t=m.content.cloneNode(!0),s=t.querySelector(".task-name label"),c=t.querySelector(".task-name input"),a=t.querySelector(".task-description"),d=t.querySelector(".task-due-date"),o=t.querySelector(".task-del-icon");c.id=e.id,c.checked=e.completed,s.htmlFor=e.id,s.append(e.taskName),a.textContent=e.description,d.id=e.id,d.value=e.dueDate,o.id=e.id,S.appendChild(t)}))}function f(){k.value=null,v.value=null,P.value=null,g.style.display="none"}p.addEventListener("click",(e=>{g.style.display="block",k.focus()})),h.addEventListener("click",(e=>{f()})),j.addEventListener("submit",(e=>{e.preventDefault(),s.addTask(k.value,v.value,P.value),f(),y()})),S.addEventListener("click",(e=>{"input"===e.target.tagName.toLowerCase()&&s.markCompletedTask(e.target),e.target.classList.contains("task-del-icon")&&(s.deleteTask(e.target),y())})),S.addEventListener("change",(e=>{e.target.classList.contains("task-due-date")&&(s.updateDueDate(e.target),y())})),u.addEventListener("click",(e=>{s.removeProject(),l(),y()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,